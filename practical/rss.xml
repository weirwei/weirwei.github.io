<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Practicals on 浩雨未倾</title><link>http://blog.weirwei.cn/practical/</link><description>Recent content in Practicals on 浩雨未倾</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 02 Jan 2024 12:00:00 +0800</lastBuildDate><atom:link href="http://blog.weirwei.cn/practical/rss.xml" rel="self" type="application/rss+xml"/><item><title>Gemini 实战</title><link>http://blog.weirwei.cn/practical/get_start_gemini/</link><pubDate>Tue, 02 Jan 2024 12:00:00 +0800</pubDate><guid>http://blog.weirwei.cn/practical/get_start_gemini/</guid><description>&lt;blockquote>
&lt;p>谷歌的 Gemini 已对外开放，虽然完全比不上他宣传的那么叼，但不妨碍我们尝试把玩。
本文的目的是能够在本地调通 Gemini 的 api 接口&lt;/p>
&lt;/blockquote></description></item><item><title>换机记录</title><link>http://blog.weirwei.cn/practical/change_machine/</link><pubDate>Tue, 02 Jan 2024 12:00:00 +0800</pubDate><guid>http://blog.weirwei.cn/practical/change_machine/</guid><description>&lt;blockquote>
&lt;p>要换主力机，记录一下换机过程。因为想对自己的电脑掌控度高一点，因此选择重新配置，没有使用苹果的数据导入功能。&lt;/p>
&lt;/blockquote></description></item><item><title>go 结构体包含接口成员进行反序列化</title><link>http://blog.weirwei.cn/practical/go_struct_contains_interface/</link><pubDate>Wed, 18 Oct 2023 18:45:00 +0800</pubDate><guid>http://blog.weirwei.cn/practical/go_struct_contains_interface/</guid><description>&lt;blockquote>
&lt;p>工作中遇到一个问题，结构体包含接口类型的成员时，在反序列化的时候会报错。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-golang" data-lang="golang">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">// Task 接口类型
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">&lt;/span>&lt;span style="color:#8be9fd;font-style:italic">type&lt;/span> Task &lt;span style="color:#8be9fd;font-style:italic">interface&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#50fa7b">Exec&lt;/span>() &lt;span style="color:#8be9fd">error&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">// TaskA Task接口的实现类A
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">&lt;/span>&lt;span style="color:#8be9fd;font-style:italic">type&lt;/span> TaskA &lt;span style="color:#8be9fd;font-style:italic">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> A &lt;span style="color:#8be9fd">string&lt;/span> &lt;span style="color:#f1fa8c">`json:&amp;#34;a&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd;font-style:italic">func&lt;/span> (ta &lt;span style="color:#ff79c6">*&lt;/span>TaskA) &lt;span style="color:#50fa7b">Exec&lt;/span>() &lt;span style="color:#8be9fd">error&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fmt.&lt;span style="color:#50fa7b">Println&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#34;TaskA Exec&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">return&lt;/span> &lt;span style="color:#ff79c6">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">// TaskB Task接口的实现类B
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">&lt;/span>&lt;span style="color:#8be9fd;font-style:italic">type&lt;/span> TaskB &lt;span style="color:#8be9fd;font-style:italic">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> B &lt;span style="color:#8be9fd">string&lt;/span> &lt;span style="color:#f1fa8c">`json:&amp;#34;b&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd;font-style:italic">func&lt;/span> (tb &lt;span style="color:#ff79c6">*&lt;/span>TaskB) &lt;span style="color:#50fa7b">Exec&lt;/span>() &lt;span style="color:#8be9fd">error&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fmt.&lt;span style="color:#50fa7b">Println&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#34;TaskB Exec&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">return&lt;/span> &lt;span style="color:#ff79c6">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">// MixedStruct 反序列化目标结构体
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">&lt;/span>&lt;span style="color:#8be9fd;font-style:italic">type&lt;/span> MixedStruct &lt;span style="color:#8be9fd;font-style:italic">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Id &lt;span style="color:#8be9fd">uint64&lt;/span> &lt;span style="color:#f1fa8c">`json:&amp;#34;id&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Task Task &lt;span style="color:#f1fa8c">`json:&amp;#34;task&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>MySQL where 范围查询和 order by 关键字无法同时命中索引</title><link>http://blog.weirwei.cn/practical/index_in_orderby/</link><pubDate>Wed, 27 Sep 2023 15:18:00 +0800</pubDate><guid>http://blog.weirwei.cn/practical/index_in_orderby/</guid><description>&lt;blockquote>
&lt;p>开发中，使用 in 和 order by 的时候，发现无法同时命中索引。&lt;/p>
&lt;/blockquote>
&lt;p>使用 &lt;code>IN&lt;/code> 运算符来过滤行时，&lt;code>MySQL&lt;/code> 会先使用索引来定位表中的行，并将这些行的所有数据读入内存中。随后，&lt;code>MySQL&lt;/code> 会根据查询语句中的 &lt;code>ORDER BY&lt;/code> 子句对这些数据进行排序。&lt;/p></description></item><item><title>Gorm 的黑魔法</title><link>http://blog.weirwei.cn/practical/gorm_black_magic/</link><pubDate>Wed, 27 Sep 2023 15:10:00 +0800</pubDate><guid>http://blog.weirwei.cn/practical/gorm_black_magic/</guid><description>&lt;blockquote>
&lt;p>小伙看到同事写的Gorm黑魔法，逐渐不淡定了。&lt;/p>
&lt;/blockquote>
&lt;p>开发过程中，看到同事的代码写了这么一段：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>db = db.&lt;span style="color:#50fa7b">Session&lt;/span>(&lt;span style="color:#ff79c6">&amp;amp;&lt;/span>gorm.Session{Context: db.Statement.Context}).&lt;span style="color:#50fa7b">FirstOrCreate&lt;/span>(&lt;span style="color:#ff79c6">&amp;amp;&lt;/span>entity)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">if&lt;/span> db.Error &lt;span style="color:#ff79c6">!=&lt;/span>&lt;span style="color:#ff79c6">nil&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">return&lt;/span> components.ErrorDbInsert.&lt;span style="color:#50fa7b">WrapPrintf&lt;/span>(db.Error, &lt;span style="color:#f1fa8c">&amp;#34;Insert error, entity:%s&amp;#34;&lt;/span>, utils.&lt;span style="color:#50fa7b">ToJson&lt;/span>(entity))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">if&lt;/span> db.RowsAffected &lt;span style="color:#ff79c6">==&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">return&lt;/span> components.ErrorAlreadyExist
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>go test 的内联问题</title><link>http://blog.weirwei.cn/practical/inlining/</link><pubDate>Wed, 27 Sep 2023 11:00:00 +0800</pubDate><guid>http://blog.weirwei.cn/practical/inlining/</guid><description>&lt;blockquote>
&lt;p>使用&lt;code>monkey&lt;/code>对函数进行打桩单测的时候，发现打桩函数没有生效。&lt;/p>
&lt;/blockquote>
&lt;p>习惯直接使用IDE的可视化的&lt;code>run&lt;/code>和&lt;code>debug&lt;/code>功能进行跑单测，没有关注到具体执行的命令。&lt;/p></description></item></channel></rss>