<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>双指针 on 浩雨未倾</title><link>http://blog.weirwei.cn/tags/%E5%8F%8C%E6%8C%87%E9%92%88/</link><description>Recent content in 双指针 on 浩雨未倾</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 03 Dec 2023 00:00:00 +0800</lastBuildDate><atom:link href="http://blog.weirwei.cn/tags/%E5%8F%8C%E6%8C%87%E9%92%88/rss.xml" rel="self" type="application/rss+xml"/><item><title>33. 搜索旋转排序数组</title><link>http://blog.weirwei.cn/leetcode/leetcode_search-in-rotated-sorted-array/</link><pubDate>Sun, 03 Dec 2023 00:00:00 +0800</pubDate><guid>http://blog.weirwei.cn/leetcode/leetcode_search-in-rotated-sorted-array/</guid><description>&lt;blockquote>
&lt;p>
&lt;a href="https://leetcode.cn/problems/search-in-rotated-sorted-array/" title="https://leetcode.cn/problems/search-in-rotated-sorted-array/" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
https://leetcode.cn/problems/search-in-rotated-sorted-array/
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>整数数组 nums 按升序排列，数组中的值 互不相同 。&lt;/p>
&lt;p>在传递给函数之前，nums 在预先未知的某个下标 k（0 &amp;lt;= k &amp;lt; nums.length）上进行了 旋转，使数组变为 [nums[k], nums[k+1], &amp;hellip;, nums[n-1], nums[0], nums[1], &amp;hellip;, nums[k-1]]（下标 从 0 开始 计数）。例如， [0,1,2,4,5,6,7] 在下标 3 处经旋转后可能变为 [4,5,6,7,0,1,2] 。&lt;/p>
&lt;p>给你 旋转后 的数组 nums 和一个整数 target ，如果 nums 中存在这个目标值 target ，则返回它的下标，否则返回 -1 。&lt;/p>
&lt;p>你必须设计一个时间复杂度为 O(log n) 的算法解决此问题。&lt;/p></description></item><item><title>409. 最长回文串</title><link>http://blog.weirwei.cn/leetcode/leetcode_longest-palindrome/</link><pubDate>Thu, 16 Nov 2023 00:00:00 +0800</pubDate><guid>http://blog.weirwei.cn/leetcode/leetcode_longest-palindrome/</guid><description>&lt;blockquote>
&lt;p>
&lt;a href="https://leetcode.cn/problems/longest-palindrome/" title="https://leetcode.cn/problems/longest-palindrome/" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
https://leetcode.cn/problems/longest-palindrome/
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>给定一个包含大写字母和小写字母的字符串 s ，返回 通过这些字母构造成的 最长的回文串 。&lt;/p>
&lt;p>在构造过程中，请注意 区分大小写 。比如 &amp;ldquo;Aa&amp;rdquo; 不能当做一个回文字符串。&lt;/p></description></item><item><title>15. 三数之和</title><link>http://blog.weirwei.cn/leetcode/leetcode_3sum/</link><pubDate>Mon, 30 Oct 2023 00:00:00 +0800</pubDate><guid>http://blog.weirwei.cn/leetcode/leetcode_3sum/</guid><description>&lt;blockquote>
&lt;p>
&lt;a href="https://leetcode.cn/problems/3sum/" title="https://leetcode.cn/problems/3sum/" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
https://leetcode.cn/problems/3sum/
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>给你一个整数数组 nums ，判断是否存在三元组 &lt;code>[nums[i], nums[j], nums[k]]&lt;/code> 满足 &lt;code>i != j、i != k 且 j != k&lt;/code> ，同时还满足 &lt;code>nums[i] + nums[j] + nums[k] == 0&lt;/code> 。请&lt;/p>
&lt;p>你返回所有和为 0 且不重复的三元组。&lt;/p>
&lt;p>注意：答案中不可以包含重复的三元组。&lt;/p></description></item></channel></rss>