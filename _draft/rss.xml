<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>_drafts on 浩雨未倾</title><link>http://blog.weirwei.cn/_draft/</link><description>Recent content in _drafts on 浩雨未倾</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 18 Nov 2023 11:00:00 +0800</lastBuildDate><atom:link href="http://blog.weirwei.cn/_draft/rss.xml" rel="self" type="application/rss+xml"/><item><title>SQL 实战建议</title><link>http://blog.weirwei.cn/_draft/sql_use/</link><pubDate>Sat, 18 Nov 2023 11:00:00 +0800</pubDate><guid>http://blog.weirwei.cn/_draft/sql_use/</guid><description>条件语句 != 和 &amp;lt;&amp;gt; 使用 != 和 &amp;lt;&amp;gt; 会让引擎放弃对该字段使用索引，因此适合用在进一步筛选数据的时候 如： select * from tblMessage where msg_type = 3 and deleted &amp;lt;&amp;gt; 1; 假设我们有索引(msg_t</description></item><item><title/><link>http://blog.weirwei.cn/_draft/binlog_redolog_undolog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://blog.weirwei.cn/_draft/binlog_redolog_undolog/</guid><description>作用 binlog: 记录数据库执行的写入性信息。 redo log: 记录数据被操作后的样子。先写redo log，再写磁盘。 undo log: 记录数据操作前的样子。 使用场景 binlog: 主从赋值、数</description></item><item><title/><link>http://blog.weirwei.cn/_draft/mysql_lock/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://blog.weirwei.cn/_draft/mysql_lock/</guid><description/></item><item><title/><link>http://blog.weirwei.cn/_draft/question_record/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://blog.weirwei.cn/_draft/question_record/</guid><description>什么是悲观锁，什么是乐观锁 乐观锁是发生冲突时进行回滚、重试操作，适用于读多写少的场景 悲观锁是发生冲突时阻塞，适用于写多场景 MySQL什么时候</description></item></channel></rss>